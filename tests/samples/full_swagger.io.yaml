swagger: "2.0"
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
host: api.example.com
basePath: /v1
schemes:
  - https

produces:
  - application/json
consumes:
  - application/json

tags:
  - name: fe_ns:user
  - name: fe_ns:teacher

paths:
  /users:
    get:
      summary: Returns a list of users.
      description: Hello Get
      tags:
        - fe_ns:user
      produces:
        - application/json
      parameters: 
        - $ref: "#/parameters/PageIndexRequest"
        - $ref: "#/parameters/PageSizeRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UsersResponse"

  /user:
    post:
      summary: Post a new user
      description: Hello Post
      tags:
        - fe_ns:user
      parameters:
        - $ref: "#/parameters/PostUserRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VoidResponse"

  /users/{userId}:
    get:
      summary: Returns a user
      description: Optional extended description in Markdown.
      tags:
        - fe_ns:user
      parameters: 
        - in: path
          name: userId
          required: true
          type: integer

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'

    patch:
      summary: Patch a user
      description: Hello Patch
      tags:
        - fe_ns:user
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'

    delete:
      summary: Remove a user
      description: Hell Delete
      tags:
        - fe_ns:user
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VoidResponse'

  /teachers:
    get:
      summary: Returns a list of teacher.
      description: Some desc
      tags:
        - fe_ns:teacher
      parameters:
        - $ref: "#/parameters/PageIndexRequest"
        - $ref: "#/parameters/PageSizeRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TeachersResponse"

parameters:
  PageIndexRequest:
    in: query
    name: page_index
    type: integer
    required: false
    default: 1
    minimum: 1
  PageSizeRequest:
    in: query
    name: page_size
    type: integer
    required: false
    default: 10
    minimum: 1
  PostUserRequest:
    in: body
    name: "new user"
    schema:
      $ref: "#/definitions/User"

definitions:
  VoidResponse:
    type: object
    allOf:
      - $ref: "#/definitions/ResultWrapper"
      - type: object
        properties: 
          data: 
            default: null

  UsersResponse:
    type: object
    allOf:
      - $ref: "#/definitions/ResultWrapper"
      - type: object
        properties: 
          data:
            allOf:
              - $ref: "#/definitions/PaginationWrapper"
                properties: 
                  list:
                    type: array
                    items:
                      $ref: "#/definitions/User"

  TeachersResponse:
    type: object
    allOf:
      - $ref: "#/definitions/ResultWrapper"
      - type: object
        properties: 
          data:
            allOf:
              - $ref: "#/definitions/PaginationWrapper"
                properties: 
                  list:
                    type: array
                    items:
                      $ref: "#/definitions/Teacher"

  ResultWrapper:
    properties: 
      code:
        type: integer
      msg:
        type: string
      data:
        type: object

  PaginationWrapper:
    properties: 
      current:
        type: integer
      total:
        type: integer
      list:
        type: array
        items:
          type: object

  User:
    properties:
      id:
        type: integer
      name:
        type: string
      age:
        type: integer
    # Both properties are required
    required:  
      - name
    
  Teacher:
    properties:
      id:
        type: integer
      name:
        type: string
      sex:
        type: string
        enum:
          - male
          - female
    # Both properties are required
    required:  
      - name